{
  modules: {
    setup: {},
    account: '',
    help: '',
    calendar: '',
    checkin: '',
    todo: '',
    checkout: ''
  },
  views: {
    setup: {
      users: '',
      clients: '',
      roles: '',
      languages: '',
      workspaces: '',
      services: '',
      prices: '',
      forms: '',
      templates: '',
      calendars: '',
      checkins: ''
    },
    account: {
      profile: '',
      organization: ''
    }
  },
  objects: {}
}

{
  module: ['setup', 'account', 'help', 'calendar', 'checkin', 'todo', 'checkout'],
  view: [['users','clients','roles'], ['profile', 'organization'], ['supports', 'guides']]
}








var arr = [
	// setup
  {
  	modules: 'setup',
    mgroup: 'admin',
    views: 'users',
    objects: 'user'
  },
  {
  	modules: 'setup',
    mgroup: 'admin',
    views: 'users',
    objects: 'contact'
  },
  {
  	modules: 'setup',
    mgroup: 'admin',
    views: 'clients',
    objects: 'client'
  },
  {
  	modules: 'setup',
    mgroup: 'admin',
    views: 'roles',
    objects: 'role'
  },
  
  // account
  {
  	modules: 'account',
    mgroup: 'user',
    views: 'profile',
    objects: 'user'
  },
  {
  	modules: 'account',
    mgroup: 'user',
    views: 'subscription',
    objects: 'subscription'
  },
  {
  	modules: 'account',
    mgroup: 'user',
    views: 'organization',
    objects: 'organization'
  }
];

// policy
var p = {
	module: {
  	setup: {},
    account: {}
  },
  view: {
  	setup: {
      users: {},
      clients: {},
      roles: {}
    }
  },
  object: {
  	users: {
      user: {},
      contact: {}, 
    }
  }
}

// 
var po = {
	setup: {
  
  	users: {
    	user: {}
    }
  },
  
	module: {
  	setup: {
    	access: '*',
    	view: {
      	users: {
        	object: {
          	user: {}
          }
        }
      }
    }
  }
}

//
var n = {
	module: ['setup', 'account'],
  view: ['users', 'clients', 'roles', 'profile', 'subscription', 'organization'],
  object: ['user.contact', ]
}

var array = arr.reduce((a, i) => {

	const {modules, views, objects} = a;
  
  const m = {...modules, [i.modules]: {label: i.modules, group: i.mgroup}};
  
	const v = {...views, [i.modules]: {...views[i.modules], [i.views]: {}} };
  
  const o = {...objects, [i.views]: {...objects[i.views], [i.objects]: {}}};

  
	return {modules: {...m}, views: {...v}, objects: {...o}};
  
}, {modules: {}, views: {}, objects: {}});



var nav = arr.reduce((a, i) => {

	const {modules, views, objects} = a;
  
  const m = [...modules];
  const v = [...views];
  const k = objects[i.views] || [];
  const o = {...objects, [i.views]: [...k, i.objects]};
  
  
  if(m.indexOf(i.modules) === -1) {
  	v.push([]);
  	m.push(i.modules);
  }
  
  if(v[m.indexOf(i.modules)].indexOf(i.views) === -1) {
  	//o.push([]);
  	v[m.indexOf(i.modules)].push(i.views);
    
  }
  
 //o[i.views].push(i.objects);

  //o[o.lastIndexOf(o.at(-1))].push(i.objects);
  //o[o.lastIndexOf(o.at(-1))].push(i.objects);

	return {modules: [...m], views: [...v], objects: {...o}};
  
}, {modules: [], views: [], objects: {}});


console.log(nav);

//console.log(obj);

/*
if(o[v.indexOf(i.views)].indexOf(i.objects) === -1) {
  	o[v.indexOf(i.views)].push(i.objects);
  }
*/











